@page "/BrowseView"
@using Labb2.Shared.DTOs
@using Labb2.Shared.Interfaces
@using Labb2.Client.Services
@inject IGenreService<GenreDto> GenreService
@inject IMovieService<MovieDto> MovieService
@inject ITmdbService<TmdbMovieDto> TmdbService



@* <div class="filter-section">
	<MudSelect @bind-Value="SelectedGenre">
		@foreach (var genre in Genres)
		{
				<MudSelectItem  Value="@genre" >@genre.Name</MudSelectItem>
		}
	</MudSelect>
	<MudTextField Label="Search" @bind-Value="SearchTitle" Variant="Variant.Text"></MudTextField>
	
	
</div> *@

<div class="d-flex flex-column justify-center mt-16 mb-16">

    <MudList Class="d-flex align-self-center flex-row gap-4">

        @foreach (var movie in TmdbMovies)
        {
            <MudListItem>
					
                <MudNavLink Href="@($"/MovieInfoView/{movie.Id}")">
					<MudImage Class="rounded-lg" Src="@($"https://image.tmdb.org/t/p/w500/{movie.Poster_Path}")" ObjectPosition="ObjectPosition.Center" ObjectFit="ObjectFit.Fill" Height="210" Width="150"></MudImage>
				</MudNavLink>
            </MudListItem>
        }

    </MudList>
</div>


@code
{
	public string SearchTitle { get; set; }
	public List<string> Images { get; set; } = new();
	public List<GenreDto> Genres { get; set; } = new();
	public List<TmdbMovieDto> TmdbMovies { get; set; } = new();
	public GenreDto SelectedGenre { get; set; }


	protected override async Task OnInitializedAsync()
	{
		Genres.AddRange(await GenreService.GetAllGenres());
		TmdbMovies.AddRange(await TmdbService.GetMovieFromTmdb());
	}

}
